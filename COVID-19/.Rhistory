View(track2('new york'))
track2("wisconsin") %>% ggplot(aes(x=date,y=R0))+geom_line()+geom_vline(xintercept = as.Date("2020-03-25"),color = 'red')
track2("CA") %>% ggplot(aes(x=date,y=R0))+geom_line()+geom_vline(xintercept = as.Date("2020-03-19"),color = 'red')
track2("California") %>% ggplot(aes(x=date,y=R0))+geom_line()+geom_vline(xintercept = as.Date("2020-03-19"),color = 'red')
filter(stay_home,state == "California")
track2("Michigan") %>% ggplot(aes(x=date,y=R0))+geom_line()+geom_vline(xintercept = as.Date("2020-03-24"),color = 'red')
track2("WA") %>% ggplot(aes(x=date,y=R0))+geom_line()+geom_vline(xintercept = as.Date("2020-03-24"),color = 'red')
track2("WA") %>% ggplot(aes(x=date,y=positive))+geom_line()+geom_vline(xintercept = as.Date("2020-03-24"),color = 'red')
track2("wisconsin") %>% ggplot(aes(x=date,y=R0))+geom_line()+geom_vline(xintercept = as.Date("2020-03-25"),color = 'red')
View(usts)
usts %>% ggplot(aes(x=date,y=positive))+geom_line()
today()-7
today()
#Making Models
support <- 0:365
us <- 330415717
############US Population####################
#Model Predictions for US:
USpop <- rep(us,length(support))
m <- lm(positive ~ day , data = usts)
m1 <- lm(positive ~ day, data = usts %>% filter(date > today()-7))
m2 <- lm(positive ~ day, data = usts %>% filter(date > today()-14))
m3 <- lm(positive ~ day, data = usts %>% filter(date > today()-21))
f <- function(x){return(m$coefficients[1] + m$coefficients[2]*x)}
f1 <- function(x){return(m1$coefficients[1] + m1$coefficients[2]*x)}
f2 <- function(x){return(m2$coefficients[1] + m2$coefficients[2]*x)}
f3 <- function(x){return(m3$coefficients[1] + m3$coefficients[2]*x)}
USpredictions <- data.frame(matrix(nrow = length(support),ncol = 6))
USpredictions[[1]] <- support
USpredictions[[2]] <- USpop
USpredictions[[3]] <- f(support)
USpredictions[[4]] <- f1(support)
USpredictions[[5]] <- f2(support)
USpredictions[[6]] <- f3(support)
USpredictions[[7]] <- as.Date("2020-01-22") + (support)
colnames(USpredictions) <- c("day","US_population","timeline","last1Week","last2Weeks","last3Weeks",'date')
USpredictions <- USpredictions %>% pivot_longer(cols = c("US_population","timeline","last1Week","last2Weeks","last3Weeks"),names_to = "model")
USpredictions  %>%  ggplot(mapping = aes(x = date,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Date", y = "# Confirmed Cases",
title = "Projected trajectory fit over data from specified ranges") +
xlim("2020-03-27","2020-12-31")
USpredictions %>% filter(model != 'US_popluation') %>%  ggplot(mapping = aes(x = date,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Date", y = "# Confirmed Cases",
title = "Projected trajectory fit over data from specified ranges") +
xlim("2020-03-27","2020-12-31")
USpredictions %>% filter(model != 'US_popluation') %>%  ggplot(mapping = aes(x = date,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Date", y = "# Confirmed Cases",
title = "Projected trajectory fit over data from specified ranges") +
xlim("2020-03-27","2020-12-31")
USpredictions %>% filter(model == 'US_popluation') %>%  ggplot(mapping = aes(x = date,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Date", y = "# Confirmed Cases",
title = "Projected trajectory fit over data from specified ranges") +
xlim("2020-03-27","2020-12-31")
USpredictions %>% filter(model == 'US_popluation') %>%  ggplot(mapping = aes(x = date,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Date", y = "# Confirmed Cases",
title = "Projected trajectory fit over data from specified ranges") +
xlim("2020-03-27","2020-12-31")
USpredictions %>% filter(model != 'US_population')
USpredictions %>% filter(model != 'US_population') %>% View
USpredictions %>% filter(model != 'US_popluation') %>%  ggplot(mapping = aes(x = date,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Date", y = "# Confirmed Cases",
title = "Projected trajectory fit over data from specified ranges") +
xlim("2020-03-27","2020-12-31")
(USpredictions %>% filter(model != 'US_population'))[['date']] %>% class
USpredictions <- USpredictions %>% pivot_longer(cols = c("US_population","timeline","last1Week","last2Weeks","last3Weeks"),names_to = "model")
View(US_popluation)
View(USpredictions)
USpredictions %>% ggplot(mapping = aes(x = date,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Date", y = "# Confirmed Cases",
title = "Projected trajectory fit over data from specified ranges") +
xlim("2020-03-27","2020-12-31")
summary(m)
summary(m1)
summary(m2)
summary(m3)
USpredictions %>% ggplot(mapping = aes(x = date,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Date", y = "# Confirmed Cases",
title = "Projected trajectory fit over data from specified ranges") +
xlim(as.Date("2020-03-27"),as.Date("2020-12-31"))
USpredictions %>% filter(model != "US_population") %>% ggplot(mapping = aes(x = date,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Date", y = "# Confirmed Cases",
title = "Projected trajectory fit over data from specified ranges") +
xlim(as.Date("2020-03-27"),as.Date("2020-12-31"))
#Making Models
support <- 0:365
us <- 1000000#330415717
############US Population####################
#Model Predictions for US:
USpop <- rep(us,length(support))
m <- lm(positive ~ day , data = usts)
m1 <- lm(positive ~ day, data = usts %>% filter(date > today()-7))
m2 <- lm(positive ~ day, data = usts %>% filter(date > today()-14))
m3 <- lm(positive ~ day, data = usts %>% filter(date > today()-21))
f <- function(x){return(m$coefficients[1] + m$coefficients[2]*x)}
f1 <- function(x){return(m1$coefficients[1] + m1$coefficients[2]*x)}
f2 <- function(x){return(m2$coefficients[1] + m2$coefficients[2]*x)}
f3 <- function(x){return(m3$coefficients[1] + m3$coefficients[2]*x)}
USpredictions <- data.frame(matrix(nrow = length(support),ncol = 6))
USpredictions[[1]] <- support
USpredictions[[2]] <- USpop
USpredictions[[3]] <- f(support)
USpredictions[[4]] <- f1(support)
USpredictions[[5]] <- f2(support)
USpredictions[[6]] <- f3(support)
USpredictions[[7]] <- as.Date("2020-01-22") + (support)
colnames(USpredictions) <- c("day","US_population","timeline","last1Week","last2Weeks","last3Weeks",'date')
USpredictions <- USpredictions %>% pivot_longer(cols = c("US_population","timeline","last1Week","last2Weeks","last3Weeks"),names_to = "model")
USpredictions %>% ggplot(mapping = aes(x = date,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Date", y = "# Confirmed Cases",
title = "Projected trajectory fit over data from specified ranges") +
xlim(as.Date("2020-03-27"),as.Date("2020-12-31"))
USpredictions %>% ggplot(mapping = aes(x = date,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Date", y = "# Confirmed Cases",
title = "Projected trajectory fit over data from specified ranges") +
xlim(as.Date("2020-03-01"),as.Date("2020-12-31"))
View(usts %>% filter(date > today()-7))
View(usts %>% filter(date > today()-7))
USpredictions %>% ggplot(mapping = aes(x = day,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Date", y = "# Confirmed Cases",
title = "Projected trajectory fit over data from specified ranges") +
xlim(as.Date("2020-03-01"),as.Date("2020-12-31"))
USpredictions %>% ggplot(mapping = aes(x = date,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Date", y = "# Confirmed Cases",
title = "Projected trajectory fit over data from specified ranges") +
xlim(as.Date("2020-03-01"),as.Date("2020-12-31"))
rm(list=ls())
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Project/Support_for_our_claim/us_positive_models.R')
USpredictions %>% ggplot(mapping = aes(x = date,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Date", y = "# Confirmed Cases",
title = "Projected trajectory fit over data from specified ranges") +
xlim(as.Date("2020-03-01"),as.Date("2020-12-31"))
m2
#Making Models
support <- 0:365
us <- 1000000#330415717
############US Population####################
#Model Predictions for US:
USpop <- rep(us,length(support))
m <- lm(positive ~ day , data = usts)
m1 <- lm(positive ~ day, data = (usts %>% filter(date > today()-7)))
m2 <- lm(positive ~ day, data = (usts %>% filter(date > today()-14)))
m3 <- lm(positive ~ day, data = (usts %>% filter(date > today()-21)))
f <- function(x){return(m$coefficients[[1]] + m$coefficients[[2]]*x)}
f1 <- function(x){return(m1$coefficients[[1]] + m1$coefficients[[2]]*x)}
f2 <- function(x){return(m2$coefficients[[1]] + m2$coefficients[[2]]*x)}
f3 <- function(x){return(m3$coefficients[[1]] + m3$coefficients[[2]]*x)}
USpredictions <- data.frame(matrix(nrow = length(support),ncol = 6))
USpredictions[[1]] <- support
USpredictions[[2]] <- USpop
USpredictions[[3]] <- f(support)
USpredictions[[4]] <- f1(support)
USpredictions[[5]] <- f2(support)
USpredictions[[6]] <- f3(support)
USpredictions[[7]] <- as.Date("2020-02-28") + (support)
colnames(USpredictions) <- c("day","US_population","timeline","last1Week","last2Weeks","last3Weeks",'date')
USpredictions <- USpredictions %>% pivot_longer(cols = c("US_population","timeline","last1Week","last2Weeks","last3Weeks"),names_to = "model")
USpredictions %>% ggplot(mapping = aes(x = date,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Date", y = "# Confirmed Cases",
title = "Projected trajectory fit over data from specified ranges") +
xlim(as.Date("2020-03-01"),as.Date("2020-12-31"))
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Project/Support_for_our_claim/us_positive_models.R')
USpredictions %>% ggplot(mapping = aes(x = date,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Date", y = "# Confirmed Cases",
title = "Projected trajectory fit over data from specified ranges") +
xlim(as.Date("2020-03-01"),as.Date("2020-12-31"))
source('C:/Users/Anantha/R/Personal/COVID-19-Analysis/Project/Support_for_our_claim/us_positive_models.R')
USpredictions %>% ggplot(mapping = aes(x = date,color = model)) +
geom_line(mapping = aes(y = value)) + labs(x = "Date", y = "# Confirmed Cases",
title = "Projected trajectory fit over data from specified ranges") +
xlim(as.Date("2020-03-01"),as.Date("2020-12-31"))
track("Wisconsin") %>% ggplot(aes(x=date,y=R0))+
geom_line()
track2("Wisconsin") %>% ggplot(aes(x=date,y=R0))+
geom_line()
View(stay_home)
plotState <- "wisconsin"
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept = stay_home$date_StayHomeOrder_issued[state == plotState] )
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept = stay_home$date_StayHomeOrder_issued[stay_home$state == plotState] )
plotState <- "Wisconsin"
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept = stay_home$date_StayHomeOrder_issued[stay_home$state == plotState] )
plotState <- "Wisconsin"
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept = stay_home$date_StayHomeOrder_issued[stay_home$state == plotState] )
stay_home$state %>% class
stay_home$state <- as.character(stay_home$state)
plotState <- "Wisconsin"
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept =
stay_home$date_StayHomeOrder_issued[stay_home$state == plotState] )
stay_home <- read.csv("setup/StayHomeIssueDates.csv")
stay_home$state <- as.character(stay_home$state)
class(stay_home$state)
plotState <- "Wisconsin"
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept = stay_home$date_StayHomeOrder_issued[stay_home$state == plotState] )
plotState
stay_home_filter(state == plotState)
stay_home %>% filter(state == plotState)
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept = (stay_home %>% filter(state == plotState))[["date_StayHomeOrder_issued"]] )
class(stay_home$date_StayHomeOrder_issued)
stay_home$date_StayHomeOrder_issued <- as.Date(stay_home$date_StayHomeOrder_issued)
plotState <- "Wisconsin"
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept = (stay_home %>% filter(state == plotState))[["date_StayHomeOrder_issued"]] )
plotState <- "Wisconsin"
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept = stay_home$date_StayHomeOrder_issued[stay_home$state == plotState] )
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept = stay_home$date_StayHomeOrder_issued[stay_home$state == plotState],color = 'red' )
plotState <- "New York"
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept =
stay_home$date_StayHomeOrder_issued[stay_home$state == plotState],
color = 'red' )
# Must be capitalized and spelled correctly
plotState <- "New York"
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept =
stay_home$date_StayHomeOrder_issued[stay_home$state == plotState],
color = 'red' )
# Must be capitalized and spelled correctly
plotState <- "Wisconsin"
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept =
stay_home$date_StayHomeOrder_issued[stay_home$state == plotState],
color = 'red' )
track2("New york") %>% select(-date_StayHomeOrder_issued) %>%  mutate(COVID_related_Hospitalization = (hospitalizedCurrently/`Total Hospital Beds`),
Available_Capacity = 1 - 0.5 - COVID_related_Hospitalization,
Other_Capacity = ifelse(date > "2020-03-25",0.5,NA)) %>% tp %>%
filter(Rate_Type == 'COVID_related_Hospitalization'|Rate_Type == "Other_Capacity" | Rate_Type == 'Available_Capacity') %>%
ggplot(aes(x=date,y = value))+
geom_area(aes(fill = Rate_Type)) +
labs(y = "Proportion of Hospital Beds",
title = "The Curve for NY")
track2("california") %>% select(-date_StayHomeOrder_issued) %>%  mutate(COVID_related_Hospitalization = (hospitalizedCurrently/`Total Hospital Beds`),
Available_Capacity = 1 - 0.5 - COVID_related_Hospitalization,
Other_Capacity = ifelse(date > "2020-03-25",0.5,NA)) %>% tp %>%
filter(Rate_Type == 'COVID_related_Hospitalization'|Rate_Type == "Other_Capacity" | Rate_Type == 'Available_Capacity') %>%
ggplot(aes(x=date,y = value))+
geom_area(aes(fill = Rate_Type)) +
labs(y = "Proportion of Hospital Beds",
title = "The Curve for NY")
track2("NY") %>% select(-date_StayHomeOrder_issued) %>%  mutate(COVID_related_Hospitalization = (hospitalizedCurrently/`Total Hospital Beds`),
Available_Capacity = 1 - 0.5 - COVID_related_Hospitalization,
Other_Capacity = ifelse(date > "2020-03-25",0.5,NA)) %>% tp %>%
filter(Rate_Type == 'COVID_related_Hospitalization'|Rate_Type == "Other_Capacity" | Rate_Type == 'Available_Capacity') %>%
ggplot(aes(x=date,y = value))+
geom_area(aes(fill = Rate_Type)) +
labs(y = "Proportion of Hospital Beds",
title = "The Curve for NY")
usts %>%
mutate(COVID_related_Hospitalization = (hospitalizedCurrently/`Total Hospital Beds`),
Available_Capacity = 1 - 0.5 - COVID_related_Hospitalization,
Other_Capacity = ifelse(date > "2020-03-21",0.5,NA)) %>% tp %>%
filter(Rate_Type == 'COVID_related_Hospitalization'|Rate_Type == "Other_Capacity" | Rate_Type == 'Available_Capacity') %>%
ggplot(aes(x=date,y = value))+
geom_area(aes(fill = Rate_Type)) +
labs(y = "Proportion of Hospital Beds",
title = "The Curve for the US")
source('C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App/2)_Our_Claim/us_positive_models.R')
source('C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App/2)_Our_Claim/us_positive_models.R')
setwd("C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App")
rm(list=ls(0))
rm(list=ls())
source('C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App/2)_Our_Claim/R0_graph.R')
exists('pipe3ran')
source('C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App/2)_Our_Claim/R0_graph.R')
setwd("C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App")
rm(list=ls())
source('C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App/2)_Our_Claim/R0_graph.R')
exists('pipe3ran')
setwd("C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App")
source('C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App/2)_Our_Claim/R0_graph.R')
source('C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App/2)_Our_Claim/R0_graph.R')
setwd("C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App")
source('C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App/2)_Our_Claim/R0_graph.R')
source("0)_setup/pipe3.R")
setwd("C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App")
source("0)_setup/pipe3.R")
pipe3ran
rm(list=ls())
setwd("C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App")
source('C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App/2)_Our_Claim/R0_graph.R')
pipe3ran
source("0)_setup/pipe3.R")
source('C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App/2)_Our_Claim/R0_graph.R')
rm(list=ls())
source('C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App/2)_Our_Claim/R0_graph.R')
source('C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App/2)_Our_Claim/R0_graph.R')
# Must be capitalized and spelled correctly
plotState <- "Wisconsin"
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept =
stay_home$date_StayHomeOrder_issued[stay_home$state == plotState],
color = 'red' )
usts %>% ggplot(aes(x=date,y=positive))+
geom_line()
usts %>% ggplot(aes(x=date,y=positive))+
geom_line() + labs(y="# Confirmed Cases", title = "# Confirmed Cases of COVID-19 in the US")
usts %>% ggplot(aes(x=positive, y = incidence))+
geom_line()+
labs(x= '#Confirmed Cases',y="Number of New Cases in a day")
source('C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App/2)_Our_Claim/R0_graph.R')
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept =
stay_home$date_StayHomeOrder_issued[stay_home$state == plotState],
color = 'red' )
plotState <- "Wisconsin"
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept =
stay_home$date_StayHomeOrder_issued[stay_home$state == plotState],
color = 'red' ) +
labs(x = "Date", y = "Ratio of incidence today to incidence yesterday",title = "Examining the acceleration factor of infection")
plotState <- "Wisconsin"
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept =
stay_home$date_StayHomeOrder_issued[stay_home$state == plotState],
color = 'red' ) +
labs(x = "Date", y = "Ratio of incidence today to yesterday",title = "Examining the acceleration factor of infection")
plotState <- "Wisconsin"
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept =
stay_home$date_StayHomeOrder_issued[stay_home$state == plotState],
color = 'red' ) +
labs(x = "Date", y = "Ratio of incidence today to yesterday",title = "Examining the acceleration factor of infection")
plotState <- "Wisconsin"
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept =
stay_home$date_StayHomeOrder_issued[stay_home$state == plotState],
color = 'red' ) +
labs(x = "Date", y = "Ratio of incidence today to yesterday",title = "Examining the acceleration factor of infection in WI")
plotState <- "New York"
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept =
stay_home$date_StayHomeOrder_issued[stay_home$state == plotState],
color = 'red' ) +
labs(x = "Date", y = "Ratio of incidence today to yesterday",title = "Examining the acceleration factor of infection in NY")
plotState <- "Louisiana"
track2(plotState) %>% ggplot(aes(x=date,y=R0))+
geom_line() +
geom_vline(xintercept =
stay_home$date_StayHomeOrder_issued[stay_home$state == plotState],
color = 'red' ) +
labs(x = "Date", y = "Ratio of incidence today to yesterday",title = "Examining the acceleration factor of infection in Louisiana")
track2("WI")
View(track2("WI"))
#______________________________________________________________#
track2("WI") %>% select(-date_StayHomeOrder_issued) %>%  mutate(COVID_related_Hospitalization = (hospitalizedCurrently/`Total Hospital Beds`),
Available_Capacity = 1 - 0.5 - COVID_related_Hospitalization,
Other_Capacity = ifelse(date > "2020-03-25",0.5,NA)) %>% tp %>%
filter(Rate_Type == 'COVID_related_Hospitalization'|Rate_Type == "Other_Capacity" | Rate_Type == 'Available_Capacity') %>%
ggplot(aes(x=date,y = value))+
geom_area(aes(fill = Rate_Type)) +
labs(y = "Proportion of Hospital Beds",
title = "The Curve for WI")
#______________________________________________________________#
track2("WI") %>% select(-date_StayHomeOrder_issued) %>%  mutate(COVID_related_Hospitalization = (hospitalizedCurrently/`Total Hospital Beds`),
Available_Capacity = 1 - 0.5 - COVID_related_Hospitalization,
Other_Capacity = ifelse(date > "2020-04-10",0.5,NA)) %>% tp %>%
filter(Rate_Type == 'COVID_related_Hospitalization'|Rate_Type == "Other_Capacity" | Rate_Type == 'Available_Capacity') %>%
ggplot(aes(x=date,y = value))+
geom_area(aes(fill = Rate_Type)) +
labs(y = "Proportion of Hospital Beds",
title = "The Curve for WI")
#______________________________________________________________#
track2("WI") %>% select(-date_StayHomeOrder_issued) %>%  mutate(COVID_related_Hospitalization = (hospitalizedCurrently/`Total Hospital Beds`),
Available_Capacity = 1 - 0.5 - COVID_related_Hospitalization,
Other_Hospitalization = ifelse(date > "2020-04-10",0.5,NA)) %>% tp %>%
filter(Rate_Type == 'COVID_related_Hospitalization'|Rate_Type == "Other_Hospitalization" | Rate_Type == 'Available_Capacity') %>%
ggplot(aes(x=date,y = value))+
geom_area(aes(fill = Rate_Type)) +
labs(y = "Proportion of Hospital Beds",
title = "The Curve for WI")
#______________________________________________________________#
track2("NY") %>% select(-date_StayHomeOrder_issued) %>%  mutate(COVID_related_Hospitalization = (hospitalizedCurrently/`Total Hospital Beds`),
Available_Capacity = 1 - 0.5 - COVID_related_Hospitalization,
Other_Hospitalization = ifelse(date > "2020-03-25",0.5,NA)) %>% tp %>%
filter(Rate_Type == 'COVID_related_Hospitalization'|Rate_Type == "Other_Hospitalization" | Rate_Type == 'Available_Capacity') %>%
ggplot(aes(x=date,y = value))+
geom_area(aes(fill = Rate_Type)) +
labs(y = "Proportion of Hospital Beds",
title = "The Curve for NY")
usts %>%
mutate(COVID_related_Hospitalization = (hospitalizedCurrently/`Total Hospital Beds`),
Available_Capacity = 1 - 0.5 - COVID_related_Hospitalization,
Other_Hospitalization = ifelse(date > "2020-03-21",0.5,NA)) %>% tp %>%
filter(Rate_Type == 'COVID_related_Hospitalization'|Rate_Type == "Other_Hospitalization" | Rate_Type == 'Available_Capacity') %>%
ggplot(aes(x=date,y = value))+
geom_area(aes(fill = Rate_Type)) +
labs(y = "Proportion of Hospital Beds",
title = "The Curve for the US")
usts %>%
mutate(COVID_related_Hospitalization = (hospitalizedCurrently/`Total Hospital Beds`),
Available_Capacity = 1 - 0.5 - COVID_related_Hospitalization,
Other_Hospitalization = ifelse(date > "2020-03-21",0.5,NA)) %>% tp %>%
filter(Rate_Type == 'COVID_related_Hospitalization'|Rate_Type == "Other_Hospitalization" | Rate_Type == 'Available_Capacity') %>%
ggplot(aes(x=date,y = value))+
geom_area(aes(fill = Rate_Type)) +
labs(y = "Proportion of Hospital Beds",
title = "The Curve for the US")
#______________________________________________________________#
track2("NY") %>% select(-date_StayHomeOrder_issued) %>%  mutate(COVID_related_Hospitalization = (hospitalizedCurrently/`Total Hospital Beds`),
Available_Capacity = 1 - 0.5 - COVID_related_Hospitalization,
Other_Hospitalization = ifelse(date > "2020-03-25",0.5,NA)) %>% tp %>%
filter(Rate_Type == 'COVID_related_Hospitalization'|Rate_Type == "Other_Hospitalization" | Rate_Type == 'Available_Capacity') %>%
ggplot(aes(x=date,y = value))+
geom_area(aes(fill = Rate_Type)) +
labs(y = "Proportion of Hospital Beds",
title = "The Curve for NY")
#______________________________________________________________#
track2("WI") %>% select(-date_StayHomeOrder_issued) %>%  mutate(COVID_related_Hospitalization = (hospitalizedCurrently/`Total Hospital Beds`),
Available_Capacity = 1 - 0.5 - COVID_related_Hospitalization,
Other_Hospitalization = ifelse(date > "2020-04-10",0.5,NA)) %>% tp %>%
filter(Rate_Type == 'COVID_related_Hospitalization'|Rate_Type == "Other_Hospitalization" | Rate_Type == 'Available_Capacity') %>%
ggplot(aes(x=date,y = value))+
geom_area(aes(fill = Rate_Type)) +
labs(y = "Proportion of Hospital Beds",
title = "The Curve for WI")
#______________________________________________________________#
track2("CA") %>% select(-date_StayHomeOrder_issued) %>%  mutate(COVID_related_Hospitalization = (hospitalizedCurrently/`Total Hospital Beds`),
Available_Capacity = 1 - 0.5 - COVID_related_Hospitalization,
Other_Hospitalization = ifelse(date > "2020-04-10",0.5,NA)) %>% tp %>%
filter(Rate_Type == 'COVID_related_Hospitalization'|Rate_Type == "Other_Hospitalization" | Rate_Type == 'Available_Capacity') %>%
ggplot(aes(x=date,y = value))+
geom_area(aes(fill = Rate_Type)) +
labs(y = "Proportion of Hospital Beds",
title = "The Curve for CA")
View(track2("CA"))
#______________________________________________________________#
track2("CA") %>% select(-date_StayHomeOrder_issued) %>%  mutate(COVID_related_Hospitalization = (hospitalizedCurrently/`Total Hospital Beds`),
Available_Capacity = 1 - 0.5 - COVID_related_Hospitalization,
Other_Hospitalization = ifelse(date > "2020-03-26",0.5,NA)) %>% tp %>%
filter(Rate_Type == 'COVID_related_Hospitalization'|Rate_Type == "Other_Hospitalization" | Rate_Type == 'Available_Capacity') %>%
ggplot(aes(x=date,y = value))+
geom_area(aes(fill = Rate_Type)) +
labs(y = "Proportion of Hospital Beds",
title = "The Curve for CA")
usts %>%
mutate(COVID_related_Hospitalization = (hospitalizedCurrently/`Total Hospital Beds`),
Available_Capacity = 1 - 0.5 - COVID_related_Hospitalization,
Other_Hospitalization = ifelse(date > "2020-03-21",0.5,NA)) %>% tp %>%
filter(Rate_Type == 'COVID_related_Hospitalization'|Rate_Type == "Other_Hospitalization" | Rate_Type == 'Available_Capacity') %>%
ggplot(aes(x=date,y = value))+
geom_area(aes(fill = Rate_Type)) +
labs(y = "Proportion of Hospital Beds in Country",
title = "The Curve for the US")
#______________________________________________________________#
track2("NY") %>% select(-date_StayHomeOrder_issued) %>%  mutate(COVID_related_Hospitalization = (hospitalizedCurrently/`Total Hospital Beds`),
Available_Capacity = 1 - 0.5 - COVID_related_Hospitalization,
Other_Hospitalization = ifelse(date > "2020-03-25",0.5,NA)) %>% tp %>%
filter(Rate_Type == 'COVID_related_Hospitalization'|Rate_Type == "Other_Hospitalization" | Rate_Type == 'Available_Capacity') %>%
ggplot(aes(x=date,y = value))+
geom_area(aes(fill = Rate_Type)) +
labs(y = "Proportion of Hospital Beds in State",
title = "The Curve for NY")
#______________________________________________________________#
track2("WI") %>% select(-date_StayHomeOrder_issued) %>%  mutate(COVID_related_Hospitalization = (hospitalizedCurrently/`Total Hospital Beds`),
Available_Capacity = 1 - 0.5 - COVID_related_Hospitalization,
Other_Hospitalization = ifelse(date > "2020-04-10",0.5,NA)) %>% tp %>%
filter(Rate_Type == 'COVID_related_Hospitalization'|Rate_Type == "Other_Hospitalization" | Rate_Type == 'Available_Capacity') %>%
ggplot(aes(x=date,y = value))+
geom_area(aes(fill = Rate_Type)) +
labs(y = "Proportion of Hospital Beds in State",
title = "The Curve for WI")
#______________________________________________________________#
track2("CA") %>% select(-date_StayHomeOrder_issued) %>%  mutate(COVID_related_Hospitalization = (hospitalizedCurrently/`Total Hospital Beds`),
Available_Capacity = 1 - 0.5 - COVID_related_Hospitalization,
Other_Hospitalization = ifelse(date > "2020-03-26",0.5,NA)) %>% tp %>%
filter(Rate_Type == 'COVID_related_Hospitalization'|Rate_Type == "Other_Hospitalization" | Rate_Type == 'Available_Capacity') %>%
ggplot(aes(x=date,y = value))+
geom_area(aes(fill = Rate_Type)) +
labs(y = "Proportion of Hospital Beds in State",
title = "The Curve for CA")
shiny::runApp('COVID-19')
setwd("C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App/COVID-19")
runApp()
setwd("C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App/COVID-19")
runApp()
setwd("C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App/COVID-19")
rm(list=ls())
setwd("C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App/COVID-19")
runApp()
setwd("C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App/COVID-19")
runApp()
setwd("C:/Users/Anantha/R/Class/Data Science (479)/COVID-19_Shiny_App/COVID-19")
runApp()
runApp()
s$`South Carolina`$confirms
